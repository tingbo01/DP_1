/*******************************************************************************
    CANopen Object Dictionary definition for CANopenNode V4

    This file was automatically generated by CANopenEditor v4.1-30-g5935269

    https://github.com/CANopenNode/CANopenNode
    https://github.com/CANopenNode/CANopenEditor

    DON'T EDIT THIS FILE MANUALLY !!!!
********************************************************************************

    File info:
        File Names:   OD.h; OD.c
        Project File: SZHC-CSTS1A_20220523(1).eds
        File Version: 1

        Created:      2020/9/17 10:26:00
        Created By:   SZHC
        Modified:     2022/5/23 9:47:00
        Modified By:  SZHC

    Device Info:
        Vendor Name:  Shenzhen Huacheng Industrial Control Co.,Ltd.
        Vendor ID:    2347
        Product Name: chassis
        Product ID:   5122

        Description:  SZHC CSTS1A EDS file
*******************************************************************************/

#ifndef OD_H
#define OD_H
/*******************************************************************************
    Counters of OD objects
*******************************************************************************/
#define OD_CNT_NMT 1


/*******************************************************************************
    Sizes of OD arrays
*******************************************************************************/
#define OD_CNT_ARR_1003 8
#define OD_CNT_ARR_1010 1
#define OD_CNT_ARR_1011 3
#define OD_CNT_ARR_1016 4
#define OD_CNT_ARR_1029 6
#define OD_CNT_ARR_6091 2
#define OD_CNT_ARR_6099 2
#define OD_CNT_ARR_60C1 2
#define OD_CNT_ARR_60C3 2


/*******************************************************************************
    OD data declaration of all groups
*******************************************************************************/
typedef struct {
    uint32_t x1000_deviceType;
    uint8_t x1001_errorRegister;
    uint32_t x1002_manufacturerStatusRegister;
    uint8_t x1003_pre_definedErrorField_sub0;
    uint32_t x1003_pre_definedErrorField[OD_CNT_ARR_1003];
    uint32_t x1005_COB_ID_SYNC;
    uint32_t x1006_communicationCyclePeriod;
    char x1008_manufacturerDeviceName[26];
    char x1009_manufacturerHardwareVersion[5];
    char x100A_manufacturerSoftwareVersion[5];
    uint8_t x100B_deviceID;
    uint16_t x100C_guardTime;
    uint8_t x100D_lifeTimeFactor;
    uint32_t x100E_nodeGuardingID;
    uint8_t x1010_storeParameters_sub0;
    uint32_t x1010_storeParameters[OD_CNT_ARR_1010];
    uint8_t x1011_restoreDefaultParameters_sub0;
    uint32_t x1011_restoreDefaultParameters[OD_CNT_ARR_1011];
    uint32_t x1013_highResolutionTimeStamp;
    uint32_t x1014_COB_ID_EMCY;
    uint8_t x1016_consumerHeartbeatTime_sub0;
    uint32_t x1016_consumerHeartbeatTime[OD_CNT_ARR_1016];
    uint16_t x1017_producerHeartbeatTime;
    struct {
        uint8_t numberOfEntries;
        uint32_t vendorId1;
        uint32_t productCode;
        uint32_t revisionNumber;
        uint32_t serialNumber;
    } x1018_identityObject;
    struct {
        uint8_t maxSub_index;
        uint32_t COB_IDClientToServer;
        uint32_t COB_IDServerToClient;
        uint8_t node_IDOfTheSDOServer;
    } x1280_SDOClientParameter;
    struct {
        uint8_t numberOfEntries;
        uint32_t COB_ID1;
        uint8_t transmissionType;
    } x1400_receivePDO_CommunicationParameter0;
    struct {
        uint8_t numberOfEntries;
        uint32_t COB_ID1;
        uint8_t transmissionType;
    } x1401_receivePDO_CommunicationParameter1;
    struct {
        uint8_t numberOfEntries;
        uint32_t COB_ID1;
        uint8_t transmissionType;
    } x1402_receivePDO_CommunicationParameter2;
    struct {
        uint8_t numberOfEntries;
        uint32_t COB_ID1;
        uint8_t transmissionType;
    } x1403_receivePDO_CommunicationParameter3;
    struct {
        uint8_t numberOfEntries;
        uint32_t PDO_MappingEntry1;
        uint32_t PDO_MappingEntry2;
        uint32_t PDO_MappingEntry3;
        uint32_t PDO_MappingEntry4;
        uint32_t PDO_MappingEntry5;
        uint32_t PDO_MappingEntry6;
        uint32_t PDO_MappingEntry7;
        uint32_t PDO_MappingEntry8;
    } x1600_receivePDO_MappingParameter0;
    struct {
        uint8_t numberOfEntries;
        uint32_t PDO_MappingEntry1;
        uint32_t PDO_MappingEntry2;
        uint32_t PDO_MappingEntry3;
        uint32_t PDO_MappingEntry4;
        uint32_t PDO_MappingEntry5;
        uint32_t PDO_MappingEntry6;
        uint32_t PDO_MappingEntry7;
        uint32_t PDO_MappingEntry8;
    } x1601_receivePDO_MappingParameter1;
    struct {
        uint8_t numberOfEntries;
        uint32_t PDO_MappingEntry1;
        uint32_t PDO_MappingEntry2;
        uint32_t PDO_MappingEntry3;
        uint32_t PDO_MappingEntry4;
        uint32_t PDO_MappingEntry5;
        uint32_t PDO_MappingEntry6;
        uint32_t PDO_MappingEntry7;
        uint32_t PDO_MappingEntry8;
    } x1602_receivePDO_MappingParameter2;
    struct {
        uint8_t numberOfEntries;
        uint32_t PDO_MappingEntry1;
        uint32_t PDO_MappingEntry2;
        uint32_t PDO_MappingEntry3;
        uint32_t PDO_MappingEntry4;
        uint32_t PDO_MappingEntry5;
        uint32_t PDO_MappingEntry6;
        uint32_t PDO_MappingEntry7;
        uint32_t PDO_MappingEntry8;
    } x1603_receivePDO_MappingParameter3;
    struct {
        uint8_t numberOfEntries;
        uint32_t COB_ID1;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint8_t compatibilityEntry;
        uint16_t eventTimer;
        uint8_t SYNC_StartValue;
    } x1800_transmitPDO_CommunicationParameter0;
    struct {
        uint8_t numberOfEntries;
        uint32_t COB_ID1;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint8_t compatibilityEntry;
        uint16_t eventTimer;
        uint8_t SYNC_StartValue;
    } x1801_transmitPDO_CommunicationParameter1;
    struct {
        uint8_t numberOfEntries;
        uint32_t COB_ID1;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint8_t compatibilityEntry;
        uint16_t eventTimer;
        uint8_t SYNC_StartValue;
    } x1802_transmitPDO_CommunicationParameter2;
    struct {
        uint8_t numberOfEntries;
        uint32_t COB_ID1;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint8_t compatibilityEntry;
        uint16_t eventTimer;
        uint8_t SYNC_StartValue;
    } x1803_transmitPDO_CommunicationParameter3;
    struct {
        uint8_t numberOfEntries;
        uint32_t PDO_MappingEntry1;
        uint32_t PDO_MappingEntry2;
        uint32_t PDO_MappingEntry3;
        uint32_t PDO_MappingEntry4;
        uint32_t PDO_MappingEntry5;
        uint32_t PDO_MappingEntry6;
        uint32_t PDO_MappingEntry7;
        uint32_t PDO_MappingEntry8;
    } x1A00_transmitPDO_MappingParameter0;
    struct {
        uint8_t numberOfEntries;
        uint32_t PDO_MappingEntry1;
        uint32_t PDO_MappingEntry2;
        uint32_t PDO_MappingEntry3;
        uint32_t PDO_MappingEntry4;
        uint32_t PDO_MappingEntry5;
        uint32_t PDO_MappingEntry6;
        uint32_t PDO_MappingEntry7;
        uint32_t PDO_MappingEntry8;
    } x1A01_transmitPDO_MappingParameter1;
    struct {
        uint8_t numberOfEntries;
        uint32_t PDO_MappingEntry1;
        uint32_t PDO_MappingEntry2;
        uint32_t PDO_MappingEntry3;
        uint32_t PDO_MappingEntry4;
        uint32_t PDO_MappingEntry5;
        uint32_t PDO_MappingEntry6;
        uint32_t PDO_MappingEntry7;
        uint32_t PDO_MappingEntry8;
    } x1A02_transmitPDO_MappingParameter2;
    struct {
        uint8_t numberOfEntries;
        uint32_t PDO_MappingEntry1;
        uint32_t PDO_MappingEntry2;
        uint32_t PDO_MappingEntry3;
        uint32_t PDO_MappingEntry4;
        uint32_t PDO_MappingEntry5;
        uint32_t PDO_MappingEntry6;
        uint32_t PDO_MappingEntry7;
        uint32_t PDO_MappingEntry8;
    } x1A03_transmitPDO_MappingParameter3;
    uint32_t x1F80_NMTStartup;
    struct {
        uint8_t maxSub_index;
        uint8_t P0_Node_ID;
        uint8_t P10_RS485_BDR_Selection;
        uint8_t P11_CAN_BDR_Selection;
    } x2000_communicationSettings;
    struct {
        uint8_t maxSub_index;
        uint16_t P281_1st_Control_Word;
        uint16_t P282_2nd_Control_Word;
        int32_t P290_Position_Target;
        int16_t P324_Speed_Target;
        int16_t P358_Torque_Tartget;
        uint16_t P97_Position_Max_Speed;
        uint16_t P98_Torque_Max_Speed;
        uint16_t P113_Acc_Time;
        uint16_t P114_Dec_Time;
        uint16_t P119_Torque_Limit;
        uint16_t P280_Com_Command;
    } x2001_servoControl;
    struct {
        uint8_t maxSub_index;
        uint16_t P2_Torque_Limit_Select;
        uint16_t P50_Interpolation_Mode_Select;
        uint16_t P58_Communication_Cycle_Period;
        uint16_t P59_Homing_Mode;
        uint16_t P71_Communication_Position_Control_Mode;
        uint16_t P90_Motor_Positive_Direction_Select;
        uint16_t P138_Overload_Level;
        uint16_t P139_Overspeed_Level;
    } x2002_basicControlConfig;
    struct {
        uint8_t maxSub_index;
        uint16_t P182_Motor_Code;
        uint16_t P184_Encoder_PPR;
        uint16_t P185_Encoder_Z_EAngle;
        uint16_t P186_Encoder_HALL101_EAngle;
        uint16_t P187_Motor_Pole_Pairs;
        uint16_t P188_Motor_Rated_Speed;
        uint16_t P190_Motor_Rated_Torque_PU;
        uint16_t P191_Motor_Max_Torque_PU;
        uint16_t P194_Motor_Rated_Volt;
    } x2003_motorSpecificSettings;
    struct {
        uint8_t maxSub_index;
        uint16_t P200_State_Machine;
        uint16_t P201_Control_Mode_Display;
        uint16_t P202_Error_Code;
        int32_t P212_Position_Demand_Value;
        int32_t P214_Position_Actual_Value;
        int16_t P220_Velocity_Demand_Value;
        int16_t P221_Velocity_Actual_Value;
        int16_t P223_Torque_Demand_Value;
        int16_t P224_Torque_Actual_Value;
        uint16_t P226_VBus;
        uint16_t P227_Temperature;
        int16_t P207_Reg_Ai_Value1;
        int16_t P208_Reg_Ai_Value2;
    } x2004_servoStatus;
    struct {
        uint8_t maxSub_index;
        uint16_t P18_Torque_Controller_Kp;
        uint16_t P19_Torque_Controller_Ki;
    } x2010_torqueController;
    struct {
        uint8_t maxSub_index;
        uint16_t P21_Velocity_Controller_Kp;
        uint16_t P22_Velocity_Controller_Ki;
    } x2011_velocityController;
    struct {
        uint8_t maxSub_index;
        uint16_t P20_Position_Controller_Kp;
        uint16_t P25_Velocity_Feed_Forward_Kf;
        uint16_t P21_Velocity_Controller_Kp;
        uint16_t P22_Velocity_Controller_Ki;
    } x2012_positionController;
    uint8_t x2100_errorStatusBits[1];
    uint16_t x603F_errorCode;
    uint16_t x6040_controlword;
    uint16_t x6041_statusword;
    int8_t x6060_modes_of_operation;
    int8_t x6061_modesOfOperationDisplay;
    int32_t x6062_positionDemandValue;
    int32_t x6063_positionActualValueOfEncoder;
    int32_t x6064_positionActualValue;
    uint32_t x6065_positionErrThreshold;
    uint32_t x6067_positionAtThreshold;
    int32_t x606B_velocity_demand_value;
    int32_t x606C_velocity_actual_value;
    uint16_t x606D_velocityAtThreshold;
    uint16_t x606F_velocityThreshold;
    int16_t x6071_targetTorque;
    int16_t x6072_maxTorque;
    int16_t x6074_torqueDemand;
    int16_t x6077_torqueActualValue;
    int32_t x607A_target_position;
    int32_t x607C_home_offset;
    uint8_t x607E_polarity;
    uint32_t x607F_max_velocity_limit;
    uint32_t x6081_profile_velocity;
    uint32_t x6083_profile_acceleration;
    uint32_t x6084_profile_deceleration;
    uint32_t x6085_quick_stop_deceleration;
    uint8_t x6091_gearRatio_sub0;
    int16_t x6091_gearRatio[OD_CNT_ARR_6091];
    int8_t x6098_homing_method;
    uint8_t x6099_homing_speeds_sub0;
    int8_t x6099_homing_speeds[OD_CNT_ARR_6099];
    int16_t x60C0_interpolation_sub_mode_select;
    uint8_t x60C1_interpolation_data_record_sub0;
    int32_t x60C1_interpolation_data_record[OD_CNT_ARR_60C1];
    struct {
        uint8_t interpolation_time_period_number_of_entries;
        uint8_t interpolation_time_period_Interpolation_time_units1;
        int8_t interpolation_time_period_Interpolation_time_index;
    } x60C2_interpolation_time_period;
    uint8_t x60C3_interpolation_sync_definition_sub0;
    uint8_t x60C3_interpolation_sync_definition[OD_CNT_ARR_60C3];
    struct {
        uint8_t interpolation_data_configuration_number_of_entries;
        uint32_t interpolation_data_configuration_Maximum_buffer_size1;
        uint32_t interpolation_data_configuration_Actual_buffer_size;
        uint8_t interpolation_data_configuration_Buffer_organization;
        uint16_t interpolation_data_configuration_Buffer_position;
        uint8_t interpolation_data_configuration_Size_of_data_record;
        uint8_t value_Description_Buffer_clear;
    } x60C4_interpolation_data_configuration;
    uint16_t x60E0_positiveTorqueLimitValue;
    uint16_t x60E1_negativeTorqueLimitValue;
    int32_t x60F4_following_error_actual_value;
    int32_t x60FC_position_demand_value;
    uint32_t x60FD_digital_inputs;
    int32_t x60FF_target_velocity;
    char x6504_drive_manufacturer[46];
} OD_RAM_t;

typedef struct {
    uint32_t x1007_synchronousWindowLength;
    uint32_t x1012_COB_ID_TIME;
    uint16_t x1015_inhibitTimeEMCY;
    uint8_t x1019_synchronousCounterOverflowValue;
    uint8_t x1029_errorBehavior_sub0;
    uint8_t x1029_errorBehavior[OD_CNT_ARR_1029];
    struct {
        uint8_t maxSub_index;
        uint32_t COB_IDClientToServer;
        uint32_t COB_IDServerToClient;
    } x1200_SDOServerParameter;
} OD_ROM_t;

#ifndef OD_ATTR_RAM
#define OD_ATTR_RAM
#endif
extern OD_ATTR_RAM OD_RAM_t OD_RAM;

#ifndef OD_ATTR_ROM
#define OD_ATTR_ROM
#endif
extern OD_ATTR_ROM OD_ROM_t OD_ROM;

#ifndef OD_ATTR_OD
#define OD_ATTR_OD
#endif
extern OD_ATTR_OD OD_t *OD;


/*******************************************************************************
    Object dictionary entries - shortcuts
*******************************************************************************/
#define OD_ENTRY_H1000 &OD->list[0]
#define OD_ENTRY_H1001 &OD->list[1]
#define OD_ENTRY_H1002 &OD->list[2]
#define OD_ENTRY_H1003 &OD->list[3]
#define OD_ENTRY_H1005 &OD->list[4]
#define OD_ENTRY_H1006 &OD->list[5]
#define OD_ENTRY_H1007 &OD->list[6]
#define OD_ENTRY_H1008 &OD->list[7]
#define OD_ENTRY_H1009 &OD->list[8]
#define OD_ENTRY_H100A &OD->list[9]
#define OD_ENTRY_H100B &OD->list[10]
#define OD_ENTRY_H100C &OD->list[11]
#define OD_ENTRY_H100D &OD->list[12]
#define OD_ENTRY_H100E &OD->list[13]
#define OD_ENTRY_H1010 &OD->list[14]
#define OD_ENTRY_H1011 &OD->list[15]
#define OD_ENTRY_H1012 &OD->list[16]
#define OD_ENTRY_H1013 &OD->list[17]
#define OD_ENTRY_H1014 &OD->list[18]
#define OD_ENTRY_H1015 &OD->list[19]
#define OD_ENTRY_H1016 &OD->list[20]
#define OD_ENTRY_H1017 &OD->list[21]
#define OD_ENTRY_H1018 &OD->list[22]
#define OD_ENTRY_H1019 &OD->list[23]
#define OD_ENTRY_H1029 &OD->list[24]
#define OD_ENTRY_H1200 &OD->list[25]
#define OD_ENTRY_H1280 &OD->list[26]
#define OD_ENTRY_H1400 &OD->list[27]
#define OD_ENTRY_H1401 &OD->list[28]
#define OD_ENTRY_H1402 &OD->list[29]
#define OD_ENTRY_H1403 &OD->list[30]
#define OD_ENTRY_H1600 &OD->list[31]
#define OD_ENTRY_H1601 &OD->list[32]
#define OD_ENTRY_H1602 &OD->list[33]
#define OD_ENTRY_H1603 &OD->list[34]
#define OD_ENTRY_H1800 &OD->list[35]
#define OD_ENTRY_H1801 &OD->list[36]
#define OD_ENTRY_H1802 &OD->list[37]
#define OD_ENTRY_H1803 &OD->list[38]
#define OD_ENTRY_H1A00 &OD->list[39]
#define OD_ENTRY_H1A01 &OD->list[40]
#define OD_ENTRY_H1A02 &OD->list[41]
#define OD_ENTRY_H1A03 &OD->list[42]
#define OD_ENTRY_H1F80 &OD->list[43]
#define OD_ENTRY_H2000 &OD->list[44]
#define OD_ENTRY_H2001 &OD->list[45]
#define OD_ENTRY_H2002 &OD->list[46]
#define OD_ENTRY_H2003 &OD->list[47]
#define OD_ENTRY_H2004 &OD->list[48]
#define OD_ENTRY_H2010 &OD->list[49]
#define OD_ENTRY_H2011 &OD->list[50]
#define OD_ENTRY_H2012 &OD->list[51]
#define OD_ENTRY_H2100 &OD->list[52]
#define OD_ENTRY_H603F &OD->list[53]
#define OD_ENTRY_H6040 &OD->list[54]
#define OD_ENTRY_H6041 &OD->list[55]
#define OD_ENTRY_H6060 &OD->list[56]
#define OD_ENTRY_H6061 &OD->list[57]
#define OD_ENTRY_H6062 &OD->list[58]
#define OD_ENTRY_H6063 &OD->list[59]
#define OD_ENTRY_H6064 &OD->list[60]
#define OD_ENTRY_H6065 &OD->list[61]
#define OD_ENTRY_H6067 &OD->list[62]
#define OD_ENTRY_H606B &OD->list[63]
#define OD_ENTRY_H606C &OD->list[64]
#define OD_ENTRY_H606D &OD->list[65]
#define OD_ENTRY_H606F &OD->list[66]
#define OD_ENTRY_H6071 &OD->list[67]
#define OD_ENTRY_H6072 &OD->list[68]
#define OD_ENTRY_H6074 &OD->list[69]
#define OD_ENTRY_H6077 &OD->list[70]
#define OD_ENTRY_H607A &OD->list[71]
#define OD_ENTRY_H607C &OD->list[72]
#define OD_ENTRY_H607E &OD->list[73]
#define OD_ENTRY_H607F &OD->list[74]
#define OD_ENTRY_H6081 &OD->list[75]
#define OD_ENTRY_H6083 &OD->list[76]
#define OD_ENTRY_H6084 &OD->list[77]
#define OD_ENTRY_H6085 &OD->list[78]
#define OD_ENTRY_H6091 &OD->list[79]
#define OD_ENTRY_H6098 &OD->list[80]
#define OD_ENTRY_H6099 &OD->list[81]
#define OD_ENTRY_H60C0 &OD->list[82]
#define OD_ENTRY_H60C1 &OD->list[83]
#define OD_ENTRY_H60C2 &OD->list[84]
#define OD_ENTRY_H60C3 &OD->list[85]
#define OD_ENTRY_H60C4 &OD->list[86]
#define OD_ENTRY_H60E0 &OD->list[87]
#define OD_ENTRY_H60E1 &OD->list[88]
#define OD_ENTRY_H60F4 &OD->list[89]
#define OD_ENTRY_H60FC &OD->list[90]
#define OD_ENTRY_H60FD &OD->list[91]
#define OD_ENTRY_H60FF &OD->list[92]
#define OD_ENTRY_H6504 &OD->list[93]


/*******************************************************************************
    Object dictionary entries - shortcuts with names
*******************************************************************************/
#define OD_ENTRY_H1000_deviceType &OD->list[0]
#define OD_ENTRY_H1001_errorRegister &OD->list[1]
#define OD_ENTRY_H1002_manufacturerStatusRegister &OD->list[2]
#define OD_ENTRY_H1003_pre_definedErrorField &OD->list[3]
#define OD_ENTRY_H1005_COB_ID_SYNC &OD->list[4]
#define OD_ENTRY_H1006_communicationCyclePeriod &OD->list[5]
#define OD_ENTRY_H1007_synchronousWindowLength &OD->list[6]
#define OD_ENTRY_H1008_manufacturerDeviceName &OD->list[7]
#define OD_ENTRY_H1009_manufacturerHardwareVersion &OD->list[8]
#define OD_ENTRY_H100A_manufacturerSoftwareVersion &OD->list[9]
#define OD_ENTRY_H100B_deviceID &OD->list[10]
#define OD_ENTRY_H100C_guardTime &OD->list[11]
#define OD_ENTRY_H100D_lifeTimeFactor &OD->list[12]
#define OD_ENTRY_H100E_nodeGuardingID &OD->list[13]
#define OD_ENTRY_H1010_storeParameters &OD->list[14]
#define OD_ENTRY_H1011_restoreDefaultParameters &OD->list[15]
#define OD_ENTRY_H1012_COB_ID_TIME &OD->list[16]
#define OD_ENTRY_H1013_highResolutionTimeStamp &OD->list[17]
#define OD_ENTRY_H1014_COB_ID_EMCY &OD->list[18]
#define OD_ENTRY_H1015_inhibitTimeEMCY &OD->list[19]
#define OD_ENTRY_H1016_consumerHeartbeatTime &OD->list[20]
#define OD_ENTRY_H1017_producerHeartbeatTime &OD->list[21]
#define OD_ENTRY_H1018_identityObject &OD->list[22]
#define OD_ENTRY_H1019_synchronousCounterOverflowValue &OD->list[23]
#define OD_ENTRY_H1029_errorBehavior &OD->list[24]
#define OD_ENTRY_H1200_SDOServerParameter &OD->list[25]
#define OD_ENTRY_H1280_SDOClientParameter &OD->list[26]
#define OD_ENTRY_H1400_receivePDO_CommunicationParameter0 &OD->list[27]
#define OD_ENTRY_H1401_receivePDO_CommunicationParameter1 &OD->list[28]
#define OD_ENTRY_H1402_receivePDO_CommunicationParameter2 &OD->list[29]
#define OD_ENTRY_H1403_receivePDO_CommunicationParameter3 &OD->list[30]
#define OD_ENTRY_H1600_receivePDO_MappingParameter0 &OD->list[31]
#define OD_ENTRY_H1601_receivePDO_MappingParameter1 &OD->list[32]
#define OD_ENTRY_H1602_receivePDO_MappingParameter2 &OD->list[33]
#define OD_ENTRY_H1603_receivePDO_MappingParameter3 &OD->list[34]
#define OD_ENTRY_H1800_transmitPDO_CommunicationParameter0 &OD->list[35]
#define OD_ENTRY_H1801_transmitPDO_CommunicationParameter1 &OD->list[36]
#define OD_ENTRY_H1802_transmitPDO_CommunicationParameter2 &OD->list[37]
#define OD_ENTRY_H1803_transmitPDO_CommunicationParameter3 &OD->list[38]
#define OD_ENTRY_H1A00_transmitPDO_MappingParameter0 &OD->list[39]
#define OD_ENTRY_H1A01_transmitPDO_MappingParameter1 &OD->list[40]
#define OD_ENTRY_H1A02_transmitPDO_MappingParameter2 &OD->list[41]
#define OD_ENTRY_H1A03_transmitPDO_MappingParameter3 &OD->list[42]
#define OD_ENTRY_H1F80_NMTStartup &OD->list[43]
#define OD_ENTRY_H2000_communicationSettings &OD->list[44]
#define OD_ENTRY_H2001_servoControl &OD->list[45]
#define OD_ENTRY_H2002_basicControlConfig &OD->list[46]
#define OD_ENTRY_H2003_motorSpecificSettings &OD->list[47]
#define OD_ENTRY_H2004_servoStatus &OD->list[48]
#define OD_ENTRY_H2010_torqueController &OD->list[49]
#define OD_ENTRY_H2011_velocityController &OD->list[50]
#define OD_ENTRY_H2012_positionController &OD->list[51]
#define OD_ENTRY_H2100_errorStatusBits &OD->list[52]
#define OD_ENTRY_H603F_errorCode &OD->list[53]
#define OD_ENTRY_H6040_controlword &OD->list[54]
#define OD_ENTRY_H6041_statusword &OD->list[55]
#define OD_ENTRY_H6060_modes_of_operation &OD->list[56]
#define OD_ENTRY_H6061_modesOfOperationDisplay &OD->list[57]
#define OD_ENTRY_H6062_positionDemandValue &OD->list[58]
#define OD_ENTRY_H6063_positionActualValueOfEncoder &OD->list[59]
#define OD_ENTRY_H6064_positionActualValue &OD->list[60]
#define OD_ENTRY_H6065_positionErrThreshold &OD->list[61]
#define OD_ENTRY_H6067_positionAtThreshold &OD->list[62]
#define OD_ENTRY_H606B_velocity_demand_value &OD->list[63]
#define OD_ENTRY_H606C_velocity_actual_value &OD->list[64]
#define OD_ENTRY_H606D_velocityAtThreshold &OD->list[65]
#define OD_ENTRY_H606F_velocityThreshold &OD->list[66]
#define OD_ENTRY_H6071_targetTorque &OD->list[67]
#define OD_ENTRY_H6072_maxTorque &OD->list[68]
#define OD_ENTRY_H6074_torqueDemand &OD->list[69]
#define OD_ENTRY_H6077_torqueActualValue &OD->list[70]
#define OD_ENTRY_H607A_target_position &OD->list[71]
#define OD_ENTRY_H607C_home_offset &OD->list[72]
#define OD_ENTRY_H607E_polarity &OD->list[73]
#define OD_ENTRY_H607F_max_velocity_limit &OD->list[74]
#define OD_ENTRY_H6081_profile_velocity &OD->list[75]
#define OD_ENTRY_H6083_profile_acceleration &OD->list[76]
#define OD_ENTRY_H6084_profile_deceleration &OD->list[77]
#define OD_ENTRY_H6085_quick_stop_deceleration &OD->list[78]
#define OD_ENTRY_H6091_gearRatio &OD->list[79]
#define OD_ENTRY_H6098_homing_method &OD->list[80]
#define OD_ENTRY_H6099_homing_speeds &OD->list[81]
#define OD_ENTRY_H60C0_interpolation_sub_mode_select &OD->list[82]
#define OD_ENTRY_H60C1_interpolation_data_record &OD->list[83]
#define OD_ENTRY_H60C2_interpolation_time_period &OD->list[84]
#define OD_ENTRY_H60C3_interpolation_sync_definition &OD->list[85]
#define OD_ENTRY_H60C4_interpolation_data_configuration &OD->list[86]
#define OD_ENTRY_H60E0_positiveTorqueLimitValue &OD->list[87]
#define OD_ENTRY_H60E1_negativeTorqueLimitValue &OD->list[88]
#define OD_ENTRY_H60F4_following_error_actual_value &OD->list[89]
#define OD_ENTRY_H60FC_position_demand_value &OD->list[90]
#define OD_ENTRY_H60FD_digital_inputs &OD->list[91]
#define OD_ENTRY_H60FF_target_velocity &OD->list[92]
#define OD_ENTRY_H6504_drive_manufacturer &OD->list[93]


/*******************************************************************************
    OD config structure
*******************************************************************************/
#ifdef CO_MULTIPLE_OD
#define OD_INIT_CONFIG(config) {\
    (config).CNT_NMT = OD_CNT_NMT;\
    (config).ENTRY_H1017 = OD_ENTRY_H1017;\
    (config).CNT_HB_CONS = 0;\
    (config).CNT_ARR_1016 = OD_CNT_ARR_1016;\
    (config).ENTRY_H1016 = OD_ENTRY_H1016;\
    (config).CNT_EM = 0;\
    (config).ENTRY_H1001 = OD_ENTRY_H1001;\
    (config).ENTRY_H1014 = OD_ENTRY_H1014;\
    (config).ENTRY_H1015 = OD_ENTRY_H1015;\
    (config).CNT_ARR_1003 = OD_CNT_ARR_1003;\
    (config).ENTRY_H1003 = OD_ENTRY_H1003;\
    (config).CNT_SDO_SRV = 0;\
    (config).ENTRY_H1200 = OD_ENTRY_H1200;\
    (config).CNT_SDO_CLI = 0;\
    (config).ENTRY_H1280 = OD_ENTRY_H1280;\
    (config).CNT_TIME = 0;\
    (config).ENTRY_H1012 = OD_ENTRY_H1012;\
    (config).CNT_SYNC = 0;\
    (config).ENTRY_H1005 = OD_ENTRY_H1005;\
    (config).ENTRY_H1006 = OD_ENTRY_H1006;\
    (config).ENTRY_H1007 = OD_ENTRY_H1007;\
    (config).ENTRY_H1019 = OD_ENTRY_H1019;\
    (config).CNT_RPDO = 0;\
    (config).ENTRY_H1400 = OD_ENTRY_H1400;\
    (config).ENTRY_H1600 = OD_ENTRY_H1600;\
    (config).CNT_TPDO = 0;\
    (config).ENTRY_H1800 = OD_ENTRY_H1800;\
    (config).ENTRY_H1A00 = OD_ENTRY_H1A00;\
    (config).CNT_LEDS = 0;\
    (config).CNT_GFC = 0;\
    (config).ENTRY_H1300 = NULL;\
    (config).CNT_SRDO = 0;\
    (config).ENTRY_H1301 = NULL;\
    (config).ENTRY_H1381 = NULL;\
    (config).ENTRY_H13FE = NULL;\
    (config).ENTRY_H13FF = NULL;\
    (config).CNT_LSS_SLV = 0;\
    (config).CNT_LSS_MST = 0;\
    (config).CNT_GTWA = 0;\
    (config).CNT_TRACE = 0;\
}
#endif

#endif /* OD_H */
